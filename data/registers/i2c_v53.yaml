block/I2C:
  description: I2C0.
  items:
    - name: Cfg
      description: Configuration Register.
      byte_offset: 16
      fieldset: Cfg
    - name: IntEn
      description: Interrupt Enable Register.
      byte_offset: 20
      fieldset: IntEn
    - name: Status
      description: Status Register.
      byte_offset: 24
      fieldset: Status
    - name: Addr
      description: Address Register.
      byte_offset: 28
      fieldset: Addr
    - name: Data
      description: Data Register.
      byte_offset: 32
      fieldset: Data
    - name: Ctrl
      description: Control Register.
      byte_offset: 36
      fieldset: Ctrl
    - name: Cmd
      description: Command Register.
      byte_offset: 40
      fieldset: Cmd
    - name: Setup
      description: Setup Register.
      byte_offset: 44
      fieldset: Setup
    - name: TPM
      description: I2C Timing Paramater Multiplier.
      byte_offset: 48
      fieldset: TPM
fieldset/Addr:
  description: Address Register.
  fields:
    - name: ADDR
      description: The slave address. For 7-bit addressing mode, the most significant 3 bits are ignored and only the least-significant 7 bits of Addr are valid.
      bit_offset: 0
      bit_size: 10
fieldset/Cfg:
  description: Configuration Register.
  fields:
    - name: FIFOSIZE
      description: "FIFO Size: 0: 2 bytes 1: 4 bytes 2: 8 bytes 3: 16 bytes."
      bit_offset: 0
      bit_size: 2
      enum: FIFO_SIZE
fieldset/Cmd:
  description: Command Register.
  fields:
    - name: CMD
      description: "Write this register with the following values to perform the corresponding actions: 0x0: no action 0x1: issue a data transaction (Master only) 0x2: respond with an ACK to the received byte 0x3: respond with a NACK to the received byte 0x4: clear the FIFO 0x5: reset the I2C controller (abort current transaction, set the SDA and SCL line to the open-drain mode, reset the Status Register and the Interrupt Enable Register, and empty the FIFO) When issuing a data transaction by writing 0x1 to this register, the CMD field stays at 0x1 for the duration of the entire transaction, and it is only cleared to 0x0 after when the transaction has completed or when the controller loses the arbitration. Note: No transaction will be issued by the controller when all phases (Start, Address, Data and Stop) are disabled."
      bit_offset: 0
      bit_size: 3
      enum: CMD
fieldset/Ctrl:
  description: Control Register.
  fields:
    - name: DATACNT
      description: "Data counts in bytes. Master: The number of bytes to transmit/receive. 0 means max length. DataCnt will be decreased by one for each byte transmitted/received. Slave: the meaning of DataCnt depends on the DMA mode: If DMA is not enabled, DataCnt is the number of bytes transmitted/received from the bus master. It is reset to 0 when the controller is addressed and then increased by one for each byte of data transmitted/received. If DMA is enabled, DataCnt is the number of bytes to transmit/receive. It will not be reset to 0 when the slave is addressed and it will be decreased by one for each byte of data transmitted/received."
      bit_offset: 0
      bit_size: 8
    - name: DIR
      description: "Transaction direction Master: Set this bit to determine the direction for the next transaction. 0: Transmitter 1: Receiver Slave: The direction of the last received transaction. 0: Receiver 1: Transmitter."
      bit_offset: 8
      bit_size: 1
      enum: DIR
    - name: PHASE_STOP
      description: Enable this bit to send a STOP condition at the end of a transaction. Master mode only.
      bit_offset: 9
      bit_size: 1
    - name: PHASE_DATA
      description: Enable this bit to send the data after Address phase. Master mode only.
      bit_offset: 10
      bit_size: 1
    - name: PHASE_ADDR
      description: Enable this bit to send the address after START condition. Master mode only.
      bit_offset: 11
      bit_size: 1
    - name: PHASE_START
      description: Enable this bit to send a START condition at the beginning of transaction. Master mode only.
      bit_offset: 12
      bit_size: 1
    - name: RESET_ON
      description: set to send reset signals(just toggle clock bus defined by reset_len). this register is clered when reset is end, can't be cleared by software.
      bit_offset: 13
      bit_size: 1
    - name: RESET_HOLD_SCKIN
      description: set to hold input clock to high when reset is active.
      bit_offset: 14
      bit_size: 1
    - name: RESET_LEN
      description: reset clock cycles. the clock high/low time is defined by Setup.T_SCLHi, 50% duty cycle.
      bit_offset: 20
      bit_size: 4
    - name: DATACNT_HIGH
      description: "Data counts in bytes. Master: The number of bytes to transmit/receive. 0 means max length. DataCnt will be decreased by one for each byte transmitted/received. Slave: the meaning of DataCnt depends on the DMA mode: If DMA is not enabled, DataCnt is the number of bytes transmitted/received from the bus master. It is reset to 0 when the controller is addressed and then increased by one for each byte of data transmitted/received. If DMA is enabled, DataCnt is the number of bytes to transmit/receive. It will not be reset to 0 when the slave is addressed and it will be decreased by one for each byte of data transmitted/received."
      bit_offset: 24
      bit_size: 8
fieldset/Data:
  description: Data Register.
  fields:
    - name: DATA
      description: Write this register to put one byte of data to the FIFO. Read this register to get one byte of data from the FIFO.
      bit_offset: 0
      bit_size: 8
fieldset/IntEn:
  description: Interrupt Enable Register.
  fields:
    - name: FIFOEMPTY
      description: Set to enabled the FIFO Empty Interrupt Interrupts when the FIFO is empty.
      bit_offset: 0
      bit_size: 1
    - name: FIFOFULL
      description: Set to enable the FIFO Full Interrupt. Interrupts when the FIFO is full.
      bit_offset: 1
      bit_size: 1
    - name: FIFOHALF
      description: "Set to enable the FIFO Half Interrupt. Receiver: Interrupts when the FIFO is half-empty, i.e, there is >= 1/2 entries in the FIFO. Transmitter: Interrupts when the FIFO is half-empty, i.e. there is <= 1/2 entries in the FIFO. This interrupt depends on the transaction direction; donâ€™t enable this interrupt unless the transfer direction is determined, otherwise unintended interrupts may be triggered."
      bit_offset: 2
      bit_size: 1
    - name: ADDRHIT
      description: "Set to enable the Address Hit Interrupt. Master: interrupts when the addressed slave returned an ACK. Slave: interrupts when the controller is addressed."
      bit_offset: 3
      bit_size: 1
    - name: ARBLOSE
      description: "Set to enable the Arbitration Lose Interrupt. Master: interrupts when the controller loses the bus arbitration Slave: not available in this mode."
      bit_offset: 4
      bit_size: 1
    - name: STOP
      description: Set to enable the STOP Condition Interrupt Interrupts when a STOP condition is detected.
      bit_offset: 5
      bit_size: 1
    - name: START
      description: Set to enable the START Condition Interrupt. Interrupts when a START condition/repeated START condition is detected.
      bit_offset: 6
      bit_size: 1
    - name: BYTETRANS
      description: Set to enable the Byte Transmit Interrupt. Interrupts when a byte of data is transmitted.
      bit_offset: 7
      bit_size: 1
    - name: BYTERECV
      description: Set to enable the Byte Receive Interrupt. Interrupts when a byte of data is received Auto-ACK will be disabled if this interrupt is enabled, that is, the software needs to ACK/NACK the received byte manually.
      bit_offset: 8
      bit_size: 1
    - name: CMPL
      description: "Set to enable the Completion Interrupt. Master: interrupts when a transaction is issued from this master and completed without losing the bus arbitration. Slave: interrupts when a transaction addressing the controller is completed."
      bit_offset: 9
      bit_size: 1
fieldset/Setup:
  description: Setup Register.
  fields:
    - name: IICEN
      description: "Enable the I2C controller. 1: Enable 0: Disable."
      bit_offset: 0
      bit_size: 1
    - name: ADDRESSING
      description: "I2C addressing mode: 1: 10-bit addressing mode 0: 7-bit addressing mode."
      bit_offset: 1
      bit_size: 1
    - name: MASTER
      description: "Configure this device as a master or a slave. 1: Master mode 0: Slave mode."
      bit_offset: 2
      bit_size: 1
    - name: DMAEN
      description: "Enable the direct memory access mode data transfer. 1: Enable 0: Disable."
      bit_offset: 3
      bit_size: 1
    - name: T_SCLHI
      description: The HIGH period of generated SCL clock is defined by T_SCLHi. SCL HIGH period = (2 * tpclk) + (2 + T_SP + T_SCLHi) * tpclk* (TPM+1) The T_SCLHi value must be greater than T_SP and T_HDDAT values. This field is only valid when the controller is in the master mode.
      bit_offset: 4
      bit_size: 9
    - name: T_SCLRADIO
      description: "The LOW period of the generated SCL clock is defined by the combination of T_SCLRatio and T_SCLHi values. When T_SCLRatio = 0, the LOW period is equal to HIGH period. When T_SCLRatio = 1, the LOW period is roughly two times of HIGH period. SCL LOW period = (2 * tpclk) + (2 + T_SP + T_SCLHi * ratio) * tpclk * (TPM+1) 1: ratio = 2 0: ratio = 1 This field is only valid when the controller is in the master mode."
      bit_offset: 13
      bit_size: 1
    - name: T_HDDAT
      description: T_HDDAT defines the data hold time after SCL goes LOW Hold time = (2 * tpclk) + (2 + T_SP + T_HDDAT) * tpclk* (TPM+1).
      bit_offset: 16
      bit_size: 5
    - name: T_SP
      description: T_SP defines the pulse width of spikes that must be suppressed by the input filter. Pulse width = T_SP * tpclk* (TPM+1).
      bit_offset: 21
      bit_size: 3
    - name: T_SUDAT
      description: T_SUDAT defines the data setup time before releasing the SCL. Setup time = (2 * tpclk) + (2 + T_SP + T_SUDAT) * tpclk* (TPM+1) tpclk = PCLK period TPM = The multiplier value in Timing Parameter Multiplier Register.
      bit_offset: 24
      bit_size: 5
fieldset/Status:
  description: Status Register.
  fields:
    - name: FIFOEMPTY
      description: Indicates that the FIFO is empty.
      bit_offset: 0
      bit_size: 1
    - name: FIFOFULL
      description: Indicates that the FIFO is full.
      bit_offset: 1
      bit_size: 1
    - name: FIFOHALF
      description: "Transmitter: Indicates that the FIFO is half-empty."
      bit_offset: 2
      bit_size: 1
    - name: ADDRHIT
      description: "Master: indicates that a slave has responded to the transaction. Slave: indicates that a transaction is targeting the controller (including the General Call)."
      bit_offset: 3
      bit_size: 1
    - name: ARBLOSE
      description: Indicates that the controller has lost the bus arbitration.
      bit_offset: 4
      bit_size: 1
    - name: STOP
      description: Indicates that a STOP Condition has been transmitted/received.
      bit_offset: 5
      bit_size: 1
    - name: START
      description: Indicates that a START Condition or a repeated START condition has been transmitted/received.
      bit_offset: 6
      bit_size: 1
    - name: BYTETRANS
      description: Indicates that a byte of data has been transmitted.
      bit_offset: 7
      bit_size: 1
    - name: BYTERECV
      description: Indicates that a byte of data has been received.
      bit_offset: 8
      bit_size: 1
    - name: CMPL
      description: "Transaction Completion Master: Indicates that a transaction has been issued from this master and completed without losing the bus arbitration Slave: Indicates that a transaction addressing the controller has been completed. This status bit must be cleared to receive the next transaction; otherwise, the next incoming transaction will be blocked."
      bit_offset: 9
      bit_size: 1
    - name: ACK
      description: "Indicates the type of the last received/transmitted acknowledgement bit: 1: ACK 0: NACK."
      bit_offset: 10
      bit_size: 1
    - name: BUSBUSY
      description: "Indicates that the bus is busy The bus is busy when a START condition is on bus and it ends when a STOP condition is seen on bus 1: Busy 0: Not busy."
      bit_offset: 11
      bit_size: 1
    - name: GENCALL
      description: "Indicates that the address of the current transaction is a general call address: 1: General call 0: Not general call."
      bit_offset: 12
      bit_size: 1
    - name: LINESCL
      description: "Indicates the current status of the SCL line on the bus 1: high 0: low."
      bit_offset: 13
      bit_size: 1
    - name: LINESDA
      description: "Indicates the current status of the SDA line on the bus 1: high 0: low."
      bit_offset: 14
      bit_size: 1
fieldset/TPM:
  description: I2C Timing Paramater Multiplier.
  fields:
    - name: TPM
      description: A multiplication value for I2C timing parameters. All the timing parameters in the Setup Register are multiplied by (TPM+1).
      bit_offset: 0
      bit_size: 5
enum/FIFO_SIZE:
  description: FIFO Size
  bit_size: 2
  variants:
    - name: _2Bytes
      description: 2 bytes
      value: 0
    - name: _4Bytes
      description: 4 bytes
      value: 1
    - name: _8Bytes
      description: 8 bytes
      value: 2
    - name: _16Bytes
      description: 16 bytes
      value: 3
enum/CMD:
  description: Command Register
  bit_size: 3
  variants:
    - name: No_Action
      description: No action
      value: 0
    - name: Data_Transaction
      description: Issue a data transaction (Master only)
      value: 1
    - name: ACK
      description: Respond with an ACK to the received byte
      value: 2
    - name: NACK
      description: Respond with a NACK to the received byte
      value: 3
    - name: Clear_FIFO
      description: Clear the FIFO
      value: 4
    - name: Reset
      description: Reset the I2C controller (abort current transaction, set the SDA and SCL line to the open-drain mode, reset the Status Register and the Interrupt Enable Register, and empty the FIFO)
      value: 5
enum/DIR:
  description: Transaction direction
  bit_size: 1
  variants:
    - name: MASTER_WRITE_SLAVE_READ
      value: 0
    - name: MASTER_READ_SLAVE_WRITE
      value: 1
